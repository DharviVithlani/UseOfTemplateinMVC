@model BusinessLogic.Models.UserData
@if (Session["id"] == null)
{
    Layout = null;
    <link href="~/CSS/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <link href="/CSS/adminlte.min.css" rel="stylesheet" />
}
else
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Session["id"] != null)
{
    <section class="content-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6">
                    <h1>Profile</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">@Html.ActionLink("Home", "Index", "Home")</li>
                        <li class="breadcrumb-item active">Profile</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>
}
<body class="hold-transition register-page">
    <div class="register-box">
        @if (Session["id"] == null)
        {
            <div class="register-box">
                <div class="login-logo">
                    <a><b>Admin</b>LTE</a>
                </div>
            </div>
        }
        <div class="card">
            <div class="card-body register-card-body">
                @using (Html.BeginForm("Registration", "Registration", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    if (Session["id"] == null)
                    {
                        <p class="login-box-msg">Register</p>
                        <div class="mb-2">
                            <span>Please enter your Email Address as your Username.</span>
                        </div>

                        <div class="input-group">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fa fa-user"></span>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>

                        <div class="input-group">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password" })
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-lock"></span>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="input-group">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-lock"></span>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.UserId)
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "FirstName" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName)
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "LastName" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName)
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Username", @readonly = "readonly" } })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB)
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", placeholder = "DOB" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, new { htmlAttributes = new { @class = "form-check-label" } })
                            <div class="row">
                                <div class="col-md-3 form-check">
                                    @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-check-input" } })
                                    <label class="form-check-label">Male</label>
                                </div>
                                <div class="col-md-9 form-check">
                                    @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-check-input" } })
                                    <label class="form-check-label">Female</label>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address)
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryId)
                            @Html.DropDownListFor(model => model.CountryId, Model.countries, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateId)
                            @Html.DropDownListFor(model => model.StateId, Model.states as IEnumerable<SelectListItem>, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CityId)
                            @Html.DropDownListFor(model => model.CityId, Model.cities as IEnumerable<SelectListItem>, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ZipCode)
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = "ZipCode" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                        if (Convert.ToInt32(Session["id"]) != Model.UserId)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive)
                                <div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success">
                                    @Html.CheckBox("IsActive", new { @class = "custom-control-input" })
                                    <label class="custom-control-label" for="IsActive"></label>
                                </div>
                            </div>
                        }
                    }
                    <div class="row">
                        <div class="col-12">
                            <div class="text-center">
                                <input type="submit" value="@(Session["id"] != null ? "Update" : "Register")" class="btn btn-primary btn-block" />
                            </div>
                        </div>
                    </div>
                }

                @if (Model != null)
                {
                    <div class="@(Model.isSuccess == true ? "text-success" : "text-danger")">
                        <span id="msg" class="mb-1">@Html.Raw(Model.ErrorMessage)</span>
                    </div>
                }

                @if (Session["id"] == null)
                {
                    <span>
                        @Html.ActionLink("I already have a membership", "LoginV2", "LoginV2")
                    </span>
                }
            </div>
        </div>
    </div>
</body>
@if (Session["id"] == null)
{
    @Scripts.Render("~/bundles/jquery")
}
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Registration/registration.js"></script>